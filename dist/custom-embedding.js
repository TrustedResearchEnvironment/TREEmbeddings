/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ var __webpack_modules__ = ({

/***/ "./index.ts":
/*!******************!*\
  !*** ./index.ts ***!
  \******************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   definition: () => (/* binding */ definition)\n/* harmony export */ });\n/* harmony import */ var _library_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./library-base */ \"./library-base.ts\");\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\n\nclass CustomEmbed extends _library_base__WEBPACK_IMPORTED_MODULE_0__.LibraryBase {\n    constructor(element, entityUrl, params, settings, errorCallback) {\n        super(element, entityUrl, params, settings, errorCallback);\n        this.token = \"\";\n        this.loadResources = () => __awaiter(this, void 0, void 0, function* () {\n            // await this.getAccessToken();\n            yield this.buildPage();\n        });\n        this.getAccessToken = () => __awaiter(this, void 0, void 0, function* () {\n            var _a;\n            try {\n                // A way to get the runtime param passed down from the portal\n                const authId = (_a = this.getParamValue('ApiAuthRequestId')) === null || _a === void 0 ? void 0 : _a.value;\n                const authResponse = yield window.loomeApi.runApiRequest(authId);\n                this.token = authResponse.access_token;\n            }\n            catch (ex) {\n                // Additional debug logs, won't hurt to get additional raw info\n                console.log(ex);\n                const error = ex;\n                this.errorCallback(\"Error\", \"Unable obtain access token\", error.message, this.element);\n            }\n        });\n        this.buildPage = () => __awaiter(this, void 0, void 0, function* () {\n            try {\n                // Fetch and parse the project data\n                // Generated by Copilot  \"token\": this.token\n                const projects = yield window.loomeApi.runApiRequest(5, {});\n                // Display the raw JSON response\n                const jsonString = JSON.stringify(projects, null, 2);\n                this.element.innerHTML = `<pre style=\"word-wrap: break-word; white-space: pre-wrap;\">${jsonString}</pre>`;\n                return;\n                // --- 1. Generate the HTML for the table body ---\n                let tableRowsHtml = '';\n                if (!projects || projects.length === 0) {\n                    tableRowsHtml = `<tr><td colspan=\"4\" style=\"text-align: center; padding: 20px;\">No projects found.</td></tr>`;\n                }\n                else {\n                    projects.forEach((project) => {\n                        var _a;\n                        const totalBudget = ((_a = project.projectBudgetDto) === null || _a === void 0 ? void 0 : _a.totalBudget) || 0;\n                        const spend = project.spend || 0;\n                        const currency = project.currency || 'USD';\n                        const percentage = totalBudget > 0 ? (spend / totalBudget) * 100 : 0;\n                        tableRowsHtml += `\r\n                        <tr>\r\n                            <td class=\"project-name\">${project.name}</td>\r\n                            <td class=\"project-description\">${project.projectDescription}</td>\r\n                            <td class=\"budget-info\">${currency} ${totalBudget.toFixed(2)}</td>\r\n                            <td>\r\n                                <div class=\"budget-info\">${currency} ${spend.toFixed(2)}</div>\r\n                                <div class=\"progress-container\">\r\n                                    <div class=\"progress-bar\" style=\"width: ${percentage.toFixed(2)}%;\"></div>\r\n                                </div>\r\n                            </td>\r\n                        </tr>\r\n                    `;\n                    });\n                }\n                // --- 2. Construct the final HTML with hardcoded CSS ---\n                const finalHtml = `\r\n                <style>\r\n                    /* Using a unique class to scope styles and prevent conflicts */\r\n                    .custom-embed-container {\r\n                        font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif;\r\n                        background-color: #f4f7f9;\r\n                        color: #333;\r\n                        padding: 20px;\r\n                        box-sizing: border-box;\r\n                    }\r\n                    .custom-embed-container h1 {\r\n                        color: #2c3e50;\r\n                        text-align: center;\r\n                        margin-top: 0;\r\n                        margin-bottom: 30px;\r\n                    }\r\n                    .custom-embed-container .table-container {\r\n                        max-width: 1200px;\r\n                        margin: 0 auto;\r\n                        overflow: hidden;\r\n                        border-radius: 10px;\r\n                        box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);\r\n                    }\r\n                    .custom-embed-container .project-table {\r\n                        width: 100%;\r\n                        border-collapse: collapse;\r\n                        background-color: #ffffff;\r\n                    }\r\n                    .custom-embed-container .project-table thead tr {\r\n                        background-color: #34495e;\r\n                        color: #ffffff;\r\n                        text-align: left;\r\n                    }\r\n                    .custom-embed-container .project-table th {\r\n                        padding: 18px 20px;\r\n                        font-weight: 600;\r\n                        letter-spacing: 0.5px;\r\n                        text-transform: uppercase;\r\n                        font-size: 12px;\r\n                    }\r\n                    .custom-embed-container .project-table tbody td {\r\n                        padding: 18px 20px;\r\n                        border-bottom: 1px solid #e0e0e0;\r\n                        vertical-align: middle;\r\n                    }\r\n                    .custom-embed-container .project-table tbody tr:last-child td {\r\n                        border-bottom: none;\r\n                    }\r\n                    .custom-embed-container .project-table tbody tr:nth-of-type(even) {\r\n                        background-color: #f8f9fa;\r\n                    }\r\n                    .custom-embed-container .project-table tbody tr:hover {\r\n                        background-color: #e9ecef;\r\n                    }\r\n                    .custom-embed-container .project-name {\r\n                        font-weight: 600;\r\n                        color: #2980b9;\r\n                    }\r\n                    .custom-embed-container .project-description {\r\n                        font-size: 14px;\r\n                        color: #555;\r\n                        max-width: 400px;\r\n                    }\r\n                    .custom-embed-container .budget-info {\r\n                        white-space: nowrap;\r\n                    }\r\n                    .custom-embed-container .progress-container {\r\n                        width: 100%;\r\n                        background-color: #e0e0e0;\r\n                        border-radius: 5px;\r\n                        margin-top: 5px;\r\n                    }\r\n                    .custom-embed-container .progress-bar {\r\n                        height: 10px;\r\n                        background-color: #3498db;\r\n                        border-radius: 5px;\r\n                    }\r\n                </style>\r\n                <div class=\"custom-embed-container\">\r\n                    <h1>Project Budget Overview</h1>\r\n                    <div class=\"table-container\">\r\n                        <table class=\"project-table\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>Project Name</th>\r\n                                    <th>Description</th>\r\n                                    <th>Total Budget</th>\r\n                                    <th>Spend</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                ${tableRowsHtml}\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n            `;\n                // --- 3. Set the element's innerHTML ---\n                this.element.innerHTML = finalHtml;\n            }\n            catch (ex) {\n                const error = ex;\n                this.errorCallback(\"Error\", \"Failed to build the page\", error.message, this.element);\n            }\n        });\n        console.log(params);\n        this.loadResources();\n    }\n}\nconst definition = {\n    version: \"1.0.0\",\n    embedding: {\n        destroy: (element) => {\n            // Clear out the contents of the element\n            element.innerHTML = \"\";\n            // Grab the instance we saved earlier on the element\n            const embedInstance = element.instance;\n            if (embedInstance) {\n                // Call the dispose on the instance first\n                embedInstance.dispose();\n                // Then clean up the reference\n                delete element.instance;\n                console.log('Instance disposed.');\n            }\n        },\n        run: (element, entityUrl, paramValues, settings, errorCallback) => {\n            const instance = new CustomEmbed(element, entityUrl, paramValues, settings, errorCallback);\n            // Store for proper disposal later when the destroy is called\n            element.instance = instance;\n        }\n    }\n};\n\n\n//# sourceURL=webpack://@trustedresearchenvironment/webpack-ts-example/./index.ts?");

/***/ }),

/***/ "./library-base.ts":
/*!*************************!*\
  !*** ./library-base.ts ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LibraryBase: () => (/* binding */ LibraryBase)\n/* harmony export */ });\nvar __awaiter = (undefined && undefined.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nclass LibraryBase {\n    constructor(element, entityUrl, paramValues, settings, errorCallback) {\n        this.loadResourceFiles = () => __awaiter(this, void 0, void 0, function* () {\n        });\n        this.setupEventListeners = () => {\n        };\n        this.dispose = () => {\n        };\n        this.element = element;\n        this.entityUrl = entityUrl;\n        this.paramValues = paramValues;\n        this.settings = settings;\n        this.errorCallback = errorCallback;\n        const embedTypeSetting = this.getSettingValue('embedType');\n        const embedIdSetting = this.getSettingValue('embedId');\n        this.embedType = +(embedTypeSetting === null || embedTypeSetting === void 0 ? void 0 : embedTypeSetting.value);\n        this.embedId = +(embedIdSetting === null || embedIdSetting === void 0 ? void 0 : embedIdSetting.value);\n        this.setupEventListeners();\n    }\n    getSettingValue(name) {\n        var matches = this.settings.filter(x => x.name == name);\n        if (matches.length > 0) {\n            return matches[0];\n        }\n        else {\n            return undefined;\n        }\n    }\n    ;\n    getParamValue(id) {\n        var matches = this.paramValues.filter(x => x.id == id);\n        if (matches.length > 0) {\n            return matches[0];\n        }\n        else {\n            return undefined;\n        }\n    }\n    ;\n    getQueryStringParameter(url, key) {\n        var parts = url.split(\"?\");\n        if (parts.length === 1)\n            return undefined;\n        var paramKeys = parts[1].split(\"&\").map(x => {\n            var keyValuePair = x.split(\"=\");\n            return {\n                key: keyValuePair[0],\n                value: keyValuePair[1]\n            };\n        });\n        var match = paramKeys.find(x => x.key.toLocaleUpperCase() === key.toLocaleUpperCase());\n        return match === undefined ? undefined : match.value;\n    }\n}\n\n\n//# sourceURL=webpack://@trustedresearchenvironment/webpack-ts-example/./library-base.ts?");

/***/ })

/******/ });
/************************************************************************/
/******/ // The module cache
/******/ var __webpack_module_cache__ = {};
/******/ 
/******/ // The require function
/******/ function __webpack_require__(moduleId) {
/******/ 	// Check if module is in cache
/******/ 	var cachedModule = __webpack_module_cache__[moduleId];
/******/ 	if (cachedModule !== undefined) {
/******/ 		return cachedModule.exports;
/******/ 	}
/******/ 	// Create a new module (and put it into the cache)
/******/ 	var module = __webpack_module_cache__[moduleId] = {
/******/ 		// no module.id needed
/******/ 		// no module.loaded needed
/******/ 		exports: {}
/******/ 	};
/******/ 
/******/ 	// Execute the module function
/******/ 	__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 
/******/ 	// Return the exports of the module
/******/ 	return module.exports;
/******/ }
/******/ 
/************************************************************************/
/******/ /* webpack/runtime/define property getters */
/******/ (() => {
/******/ 	// define getter functions for harmony exports
/******/ 	__webpack_require__.d = (exports, definition) => {
/******/ 		for(var key in definition) {
/******/ 			if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 				Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 			}
/******/ 		}
/******/ 	};
/******/ })();
/******/ 
/******/ /* webpack/runtime/hasOwnProperty shorthand */
/******/ (() => {
/******/ 	__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ })();
/******/ 
/******/ /* webpack/runtime/make namespace object */
/******/ (() => {
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = (exports) => {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/ })();
/******/ 
/************************************************************************/
/******/ 
/******/ // startup
/******/ // Load entry module and return exports
/******/ // This entry module can't be inlined because the eval devtool is used.
/******/ var __webpack_exports__ = __webpack_require__("./index.ts");
/******/ var __webpack_exports__definition = __webpack_exports__.definition;
/******/ export { __webpack_exports__definition as definition };
/******/ 
